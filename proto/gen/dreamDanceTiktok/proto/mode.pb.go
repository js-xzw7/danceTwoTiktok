// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: mode.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModelType int32

const (
	ModelType_MODEL_TYPE_DEFAULT ModelType = 0 //阵营模式
)

// Enum value maps for ModelType.
var (
	ModelType_name = map[int32]string{
		0: "MODEL_TYPE_DEFAULT",
	}
	ModelType_value = map[string]int32{
		"MODEL_TYPE_DEFAULT": 0,
	}
)

func (x ModelType) Enum() *ModelType {
	p := new(ModelType)
	*p = x
	return p
}

func (x ModelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelType) Descriptor() protoreflect.EnumDescriptor {
	return file_mode_proto_enumTypes[0].Descriptor()
}

func (ModelType) Type() protoreflect.EnumType {
	return &file_mode_proto_enumTypes[0]
}

func (x ModelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelType.Descriptor instead.
func (ModelType) EnumDescriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{0}
}

//------------------------------------创建模式----------
//创建模式请求
type CreateModelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelType     int32                  `protobuf:"varint,1,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`             // 创建模式 1:默认模式;2:组合模式;3:结婚模式
	ModelCategory int32                  `protobuf:"varint,2,opt,name=model_category,json=modelCategory,proto3" json:"model_category,omitempty"` // 创建模式 1:默认模式;2:无限模式
	QuestionBank  int32                  `protobuf:"varint,3,opt,name=question_bank,json=questionBank,proto3" json:"question_bank,omitempty"`    // 题库， 0=随机or其他1~5
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateModelRequest) Reset() {
	*x = CreateModelRequest{}
	mi := &file_mode_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelRequest) ProtoMessage() {}

func (x *CreateModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelRequest.ProtoReflect.Descriptor instead.
func (*CreateModelRequest) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{0}
}

func (x *CreateModelRequest) GetModelType() int32 {
	if x != nil {
		return x.ModelType
	}
	return 0
}

func (x *CreateModelRequest) GetModelCategory() int32 {
	if x != nil {
		return x.ModelCategory
	}
	return 0
}

func (x *CreateModelRequest) GetQuestionBank() int32 {
	if x != nil {
		return x.QuestionBank
	}
	return 0
}

//登录响应
type CreateModelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelId       int64                  `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"` //模式id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateModelResponse) Reset() {
	*x = CreateModelResponse{}
	mi := &file_mode_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelResponse) ProtoMessage() {}

func (x *CreateModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelResponse.ProtoReflect.Descriptor instead.
func (*CreateModelResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{1}
}

func (x *CreateModelResponse) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

//模式结束协议
type EndModelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelId       int64                  `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`                   // 模式id 1:默认模式
	ModelCategory int64                  `protobuf:"varint,2,opt,name=model_category,json=modelCategory,proto3" json:"model_category,omitempty"` // 创建模式 1:有限模式;2:无限模式
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndModelRequest) Reset() {
	*x = EndModelRequest{}
	mi := &file_mode_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndModelRequest) ProtoMessage() {}

func (x *EndModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndModelRequest.ProtoReflect.Descriptor instead.
func (*EndModelRequest) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{2}
}

func (x *EndModelRequest) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *EndModelRequest) GetModelCategory() int64 {
	if x != nil {
		return x.ModelCategory
	}
	return 0
}

type EndModelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndModelResponse) Reset() {
	*x = EndModelResponse{}
	mi := &file_mode_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndModelResponse) ProtoMessage() {}

func (x *EndModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndModelResponse.ProtoReflect.Descriptor instead.
func (*EndModelResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{3}
}

//组合
type RequestRankByIdCombinationRankRequestItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UidActive     string                 `protobuf:"bytes,1,opt,name=uid_active,json=uidActive,proto3" json:"uid_active,omitempty"`    //主动at人的id
	UidPassive    string                 `protobuf:"bytes,2,opt,name=uid_passive,json=uidPassive,proto3" json:"uid_passive,omitempty"` //at人的id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestRankByIdCombinationRankRequestItem) Reset() {
	*x = RequestRankByIdCombinationRankRequestItem{}
	mi := &file_mode_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestRankByIdCombinationRankRequestItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRankByIdCombinationRankRequestItem) ProtoMessage() {}

func (x *RequestRankByIdCombinationRankRequestItem) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRankByIdCombinationRankRequestItem.ProtoReflect.Descriptor instead.
func (*RequestRankByIdCombinationRankRequestItem) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{4}
}

func (x *RequestRankByIdCombinationRankRequestItem) GetUidActive() string {
	if x != nil {
		return x.UidActive
	}
	return ""
}

func (x *RequestRankByIdCombinationRankRequestItem) GetUidPassive() string {
	if x != nil {
		return x.UidPassive
	}
	return ""
}

//获取近七天世界排名的用户id
//message RequestRankByIdRequestItem {
//  string uid_id = 1; //用户id
//}
//模式结束排名
type RequestRankByIdRequest struct {
	state                   protoimpl.MessageState                       `protogen:"open.v1"`
	List                    []string                                     `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`                                                                          //
	EndModelRankCombination []*RequestRankByIdCombinationRankRequestItem `protobuf:"bytes,2,rep,name=end_model_rank_combination,json=endModelRankCombination,proto3" json:"end_model_rank_combination,omitempty"` //组合列表
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RequestRankByIdRequest) Reset() {
	*x = RequestRankByIdRequest{}
	mi := &file_mode_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestRankByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRankByIdRequest) ProtoMessage() {}

func (x *RequestRankByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRankByIdRequest.ProtoReflect.Descriptor instead.
func (*RequestRankByIdRequest) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{5}
}

func (x *RequestRankByIdRequest) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RequestRankByIdRequest) GetEndModelRankCombination() []*RequestRankByIdCombinationRankRequestItem {
	if x != nil {
		return x.EndModelRankCombination
	}
	return nil
}

//登录响应,返回世界排名
type RequestRankByIdResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	List          []*RequestRankByIdRankItem   `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`                   //
	ListCp        []*RequestRankByIdRankCpItem `protobuf:"bytes,2,rep,name=list_cp,json=listCp,proto3" json:"list_cp,omitempty"` //
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestRankByIdResponse) Reset() {
	*x = RequestRankByIdResponse{}
	mi := &file_mode_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestRankByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRankByIdResponse) ProtoMessage() {}

func (x *RequestRankByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRankByIdResponse.ProtoReflect.Descriptor instead.
func (*RequestRankByIdResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{6}
}

func (x *RequestRankByIdResponse) GetList() []*RequestRankByIdRankItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RequestRankByIdResponse) GetListCp() []*RequestRankByIdRankCpItem {
	if x != nil {
		return x.ListCp
	}
	return nil
}

type RequestRankByIdRankItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UidId         string                 `protobuf:"bytes,1,opt,name=uid_id,json=uidId,proto3" json:"uid_id,omitempty"`        //模式id
	RankNum       int32                  `protobuf:"varint,2,opt,name=rank_num,json=rankNum,proto3" json:"rank_num,omitempty"` //世界排名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestRankByIdRankItem) Reset() {
	*x = RequestRankByIdRankItem{}
	mi := &file_mode_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestRankByIdRankItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRankByIdRankItem) ProtoMessage() {}

func (x *RequestRankByIdRankItem) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRankByIdRankItem.ProtoReflect.Descriptor instead.
func (*RequestRankByIdRankItem) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{7}
}

func (x *RequestRankByIdRankItem) GetUidId() string {
	if x != nil {
		return x.UidId
	}
	return ""
}

func (x *RequestRankByIdRankItem) GetRankNum() int32 {
	if x != nil {
		return x.RankNum
	}
	return 0
}

type RequestRankByIdRankCpItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UidActive     string                 `protobuf:"bytes,1,opt,name=uid_active,json=uidActive,proto3" json:"uid_active,omitempty"`    //主动at人的id
	UidPassive    string                 `protobuf:"bytes,2,opt,name=uid_passive,json=uidPassive,proto3" json:"uid_passive,omitempty"` //主动at人的id
	RankNum       int32                  `protobuf:"varint,3,opt,name=rank_num,json=rankNum,proto3" json:"rank_num,omitempty"`         //世界排名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestRankByIdRankCpItem) Reset() {
	*x = RequestRankByIdRankCpItem{}
	mi := &file_mode_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestRankByIdRankCpItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRankByIdRankCpItem) ProtoMessage() {}

func (x *RequestRankByIdRankCpItem) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRankByIdRankCpItem.ProtoReflect.Descriptor instead.
func (*RequestRankByIdRankCpItem) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{8}
}

func (x *RequestRankByIdRankCpItem) GetUidActive() string {
	if x != nil {
		return x.UidActive
	}
	return ""
}

func (x *RequestRankByIdRankCpItem) GetUidPassive() string {
	if x != nil {
		return x.UidPassive
	}
	return ""
}

func (x *RequestRankByIdRankCpItem) GetRankNum() int32 {
	if x != nil {
		return x.RankNum
	}
	return 0
}

//补特效协议
type AddSpecialEffectsItem struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UidId            string                 `protobuf:"bytes,1,opt,name=uid_id,json=uidId,proto3" json:"uid_id,omitempty"`                                            //用户id
	SpecialEffectsId []int64                `protobuf:"varint,2,rep,packed,name=special_effects_id,json=specialEffectsId,proto3" json:"special_effects_id,omitempty"` //特效id数组
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddSpecialEffectsItem) Reset() {
	*x = AddSpecialEffectsItem{}
	mi := &file_mode_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSpecialEffectsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSpecialEffectsItem) ProtoMessage() {}

func (x *AddSpecialEffectsItem) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSpecialEffectsItem.ProtoReflect.Descriptor instead.
func (*AddSpecialEffectsItem) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{9}
}

func (x *AddSpecialEffectsItem) GetUidId() string {
	if x != nil {
		return x.UidId
	}
	return ""
}

func (x *AddSpecialEffectsItem) GetSpecialEffectsId() []int64 {
	if x != nil {
		return x.SpecialEffectsId
	}
	return nil
}

type AddSpecialEffectsRequest struct {
	state                 protoimpl.MessageState   `protogen:"open.v1"`
	AddSpecialEffectsItem []*AddSpecialEffectsItem `protobuf:"bytes,1,rep,name=add_special_effects_item,json=addSpecialEffectsItem,proto3" json:"add_special_effects_item,omitempty"` //特效列表
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AddSpecialEffectsRequest) Reset() {
	*x = AddSpecialEffectsRequest{}
	mi := &file_mode_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSpecialEffectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSpecialEffectsRequest) ProtoMessage() {}

func (x *AddSpecialEffectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSpecialEffectsRequest.ProtoReflect.Descriptor instead.
func (*AddSpecialEffectsRequest) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{10}
}

func (x *AddSpecialEffectsRequest) GetAddSpecialEffectsItem() []*AddSpecialEffectsItem {
	if x != nil {
		return x.AddSpecialEffectsItem
	}
	return nil
}

type AddSpecialEffectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSpecialEffectsResponse) Reset() {
	*x = AddSpecialEffectsResponse{}
	mi := &file_mode_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSpecialEffectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSpecialEffectsResponse) ProtoMessage() {}

func (x *AddSpecialEffectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSpecialEffectsResponse.ProtoReflect.Descriptor instead.
func (*AddSpecialEffectsResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{11}
}

//回合同步
type AsyncInfinityDataRequest struct {
	state           protoimpl.MessageState                     `protogen:"open.v1"`
	ModelId         int64                                      `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`                        // 创建模式 1:默认模式
	List            []*AsyncInfinityDataRequestItem            `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`                                              //单人的
	ModelCategory   int64                                      `protobuf:"varint,3,opt,name=model_category,json=modelCategory,proto3" json:"model_category,omitempty"`      // 创建模式 1:有限模式;2:无限模式
	CombinationList []*AsyncInfinityDataCombinationRequestItem `protobuf:"bytes,4,rep,name=combination_list,json=combinationList,proto3" json:"combination_list,omitempty"` //组合列表
	CurrentList     []*AsyncInfinityDataRequestCurrentItem     `protobuf:"bytes,5,rep,name=current_list,json=currentList,proto3" json:"current_list,omitempty"`             //当前的性别和当前套装
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AsyncInfinityDataRequest) Reset() {
	*x = AsyncInfinityDataRequest{}
	mi := &file_mode_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncInfinityDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncInfinityDataRequest) ProtoMessage() {}

func (x *AsyncInfinityDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncInfinityDataRequest.ProtoReflect.Descriptor instead.
func (*AsyncInfinityDataRequest) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{12}
}

func (x *AsyncInfinityDataRequest) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *AsyncInfinityDataRequest) GetList() []*AsyncInfinityDataRequestItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AsyncInfinityDataRequest) GetModelCategory() int64 {
	if x != nil {
		return x.ModelCategory
	}
	return 0
}

func (x *AsyncInfinityDataRequest) GetCombinationList() []*AsyncInfinityDataCombinationRequestItem {
	if x != nil {
		return x.CombinationList
	}
	return nil
}

func (x *AsyncInfinityDataRequest) GetCurrentList() []*AsyncInfinityDataRequestCurrentItem {
	if x != nil {
		return x.CurrentList
	}
	return nil
}

type AsyncInfinityDataCombinationRequestItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UidActive     string                 `protobuf:"bytes,1,opt,name=uid_active,json=uidActive,proto3" json:"uid_active,omitempty"`           //主动at人的id
	UidPassive    string                 `protobuf:"bytes,2,opt,name=uid_passive,json=uidPassive,proto3" json:"uid_passive,omitempty"`        //主动at人的id
	ActiveScore   int64                  `protobuf:"varint,3,opt,name=active_score,json=activeScore,proto3" json:"active_score,omitempty"`    //积分
	PassiveScore  int64                  `protobuf:"varint,4,opt,name=passive_score,json=passiveScore,proto3" json:"passive_score,omitempty"` //积分
	TotalScore    int64                  `protobuf:"varint,5,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`       //总积分
	OnCamp        int32                  `protobuf:"varint,6,opt,name=on_camp,json=onCamp,proto3" json:"on_camp,omitempty"`                   //所属阵营;1:左方阵营;2:右方阵营
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AsyncInfinityDataCombinationRequestItem) Reset() {
	*x = AsyncInfinityDataCombinationRequestItem{}
	mi := &file_mode_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncInfinityDataCombinationRequestItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncInfinityDataCombinationRequestItem) ProtoMessage() {}

func (x *AsyncInfinityDataCombinationRequestItem) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncInfinityDataCombinationRequestItem.ProtoReflect.Descriptor instead.
func (*AsyncInfinityDataCombinationRequestItem) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{13}
}

func (x *AsyncInfinityDataCombinationRequestItem) GetUidActive() string {
	if x != nil {
		return x.UidActive
	}
	return ""
}

func (x *AsyncInfinityDataCombinationRequestItem) GetUidPassive() string {
	if x != nil {
		return x.UidPassive
	}
	return ""
}

func (x *AsyncInfinityDataCombinationRequestItem) GetActiveScore() int64 {
	if x != nil {
		return x.ActiveScore
	}
	return 0
}

func (x *AsyncInfinityDataCombinationRequestItem) GetPassiveScore() int64 {
	if x != nil {
		return x.PassiveScore
	}
	return 0
}

func (x *AsyncInfinityDataCombinationRequestItem) GetTotalScore() int64 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *AsyncInfinityDataCombinationRequestItem) GetOnCamp() int32 {
	if x != nil {
		return x.OnCamp
	}
	return 0
}

type AsyncInfinityDataRequestItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UidId         string                 `protobuf:"bytes,1,opt,name=uid_id,json=uidId,proto3" json:"uid_id,omitempty"` //用户id
	Score         int64                  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`             //积分
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AsyncInfinityDataRequestItem) Reset() {
	*x = AsyncInfinityDataRequestItem{}
	mi := &file_mode_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncInfinityDataRequestItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncInfinityDataRequestItem) ProtoMessage() {}

func (x *AsyncInfinityDataRequestItem) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncInfinityDataRequestItem.ProtoReflect.Descriptor instead.
func (*AsyncInfinityDataRequestItem) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{14}
}

func (x *AsyncInfinityDataRequestItem) GetUidId() string {
	if x != nil {
		return x.UidId
	}
	return ""
}

func (x *AsyncInfinityDataRequestItem) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type AsyncInfinityDataRequestCurrentItem struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UidId             string                 `protobuf:"bytes,1,opt,name=uid_id,json=uidId,proto3" json:"uid_id,omitempty"`                                               //用户id
	Sex               int32                  `protobuf:"varint,2,opt,name=sex,proto3" json:"sex,omitempty"`                                                               //性别;1:男;2:女
	CurrentElementNos []int64                `protobuf:"varint,8,rep,packed,name=current_element_nos,json=currentElementNos,proto3" json:"current_element_nos,omitempty"` //当前穿搭
	TitleNo           int64                  `protobuf:"varint,9,opt,name=title_no,json=titleNo,proto3" json:"title_no,omitempty"`                                        //当前称号
	EmotionsNo        int64                  `protobuf:"varint,10,opt,name=emotions_no,json=emotionsNo,proto3" json:"emotions_no,omitempty"`                              //当前心情
	Toy               int64                  `protobuf:"varint,11,opt,name=toy,proto3" json:"toy,omitempty"`                                                              // 当前玩具
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AsyncInfinityDataRequestCurrentItem) Reset() {
	*x = AsyncInfinityDataRequestCurrentItem{}
	mi := &file_mode_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncInfinityDataRequestCurrentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncInfinityDataRequestCurrentItem) ProtoMessage() {}

func (x *AsyncInfinityDataRequestCurrentItem) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncInfinityDataRequestCurrentItem.ProtoReflect.Descriptor instead.
func (*AsyncInfinityDataRequestCurrentItem) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{15}
}

func (x *AsyncInfinityDataRequestCurrentItem) GetUidId() string {
	if x != nil {
		return x.UidId
	}
	return ""
}

func (x *AsyncInfinityDataRequestCurrentItem) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *AsyncInfinityDataRequestCurrentItem) GetCurrentElementNos() []int64 {
	if x != nil {
		return x.CurrentElementNos
	}
	return nil
}

func (x *AsyncInfinityDataRequestCurrentItem) GetTitleNo() int64 {
	if x != nil {
		return x.TitleNo
	}
	return 0
}

func (x *AsyncInfinityDataRequestCurrentItem) GetEmotionsNo() int64 {
	if x != nil {
		return x.EmotionsNo
	}
	return 0
}

func (x *AsyncInfinityDataRequestCurrentItem) GetToy() int64 {
	if x != nil {
		return x.Toy
	}
	return 0
}

type AsyncInfinityDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AsyncInfinityDataResponse) Reset() {
	*x = AsyncInfinityDataResponse{}
	mi := &file_mode_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncInfinityDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncInfinityDataResponse) ProtoMessage() {}

func (x *AsyncInfinityDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncInfinityDataResponse.ProtoReflect.Descriptor instead.
func (*AsyncInfinityDataResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{16}
}

//cp,和之前的cp一样
type CpLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelId       int64                  `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`              // 创建模式 1:默认模式
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户id
	UserIdOther   string                 `protobuf:"bytes,3,opt,name=user_id_other,json=userIdOther,proto3" json:"user_id_other,omitempty"` // 用户id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CpLinkRequest) Reset() {
	*x = CpLinkRequest{}
	mi := &file_mode_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpLinkRequest) ProtoMessage() {}

func (x *CpLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpLinkRequest.ProtoReflect.Descriptor instead.
func (*CpLinkRequest) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{17}
}

func (x *CpLinkRequest) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *CpLinkRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CpLinkRequest) GetUserIdOther() string {
	if x != nil {
		return x.UserIdOther
	}
	return ""
}

type CpLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CpLinkResponse) Reset() {
	*x = CpLinkResponse{}
	mi := &file_mode_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpLinkResponse) ProtoMessage() {}

func (x *CpLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpLinkResponse.ProtoReflect.Descriptor instead.
func (*CpLinkResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{18}
}

//解散cp
type CpBreakRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelId       int64                  `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`              // 创建模式 1:默认模式
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户id
	UserIdOther   string                 `protobuf:"bytes,3,opt,name=user_id_other,json=userIdOther,proto3" json:"user_id_other,omitempty"` // 用户id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CpBreakRequest) Reset() {
	*x = CpBreakRequest{}
	mi := &file_mode_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpBreakRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpBreakRequest) ProtoMessage() {}

func (x *CpBreakRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpBreakRequest.ProtoReflect.Descriptor instead.
func (*CpBreakRequest) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{19}
}

func (x *CpBreakRequest) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *CpBreakRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CpBreakRequest) GetUserIdOther() string {
	if x != nil {
		return x.UserIdOther
	}
	return ""
}

type CpBreakResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CpBreakResponse) Reset() {
	*x = CpBreakResponse{}
	mi := &file_mode_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpBreakResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpBreakResponse) ProtoMessage() {}

func (x *CpBreakResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpBreakResponse.ProtoReflect.Descriptor instead.
func (*CpBreakResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{20}
}

//结婚,服务端要发送一个全服公告，恭喜XXX和XXX 喜结连理、永结同心(10s)，结婚后，赠送情侣套装，丢在私有库（individual_pool_suit_ids）
type MarrySuccessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelId       int64                  `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`              // 创建模式 1:默认模式
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户id
	UserIdOther   string                 `protobuf:"bytes,3,opt,name=user_id_other,json=userIdOther,proto3" json:"user_id_other,omitempty"` // 用户id
	IsSuc         bool                   `protobuf:"varint,4,opt,name=is_suc,json=isSuc,proto3" json:"is_suc,omitempty"`                    //是否结婚成功
	Score         int64                  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`                                 // 分数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarrySuccessRequest) Reset() {
	*x = MarrySuccessRequest{}
	mi := &file_mode_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarrySuccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarrySuccessRequest) ProtoMessage() {}

func (x *MarrySuccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarrySuccessRequest.ProtoReflect.Descriptor instead.
func (*MarrySuccessRequest) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{21}
}

func (x *MarrySuccessRequest) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *MarrySuccessRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MarrySuccessRequest) GetUserIdOther() string {
	if x != nil {
		return x.UserIdOther
	}
	return ""
}

func (x *MarrySuccessRequest) GetIsSuc() bool {
	if x != nil {
		return x.IsSuc
	}
	return false
}

func (x *MarrySuccessRequest) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type MarrySuccessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户id
	UserIdOther   string                 `protobuf:"bytes,2,opt,name=user_id_other,json=userIdOther,proto3" json:"user_id_other,omitempty"` // 用户id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarrySuccessResponse) Reset() {
	*x = MarrySuccessResponse{}
	mi := &file_mode_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarrySuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarrySuccessResponse) ProtoMessage() {}

func (x *MarrySuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarrySuccessResponse.ProtoReflect.Descriptor instead.
func (*MarrySuccessResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{22}
}

func (x *MarrySuccessResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MarrySuccessResponse) GetUserIdOther() string {
	if x != nil {
		return x.UserIdOther
	}
	return ""
}

type MarryCompensateDressLevelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GiftNum       int64                  `protobuf:"varint,1,opt,name=GiftNum,proto3" json:"GiftNum,omitempty"` //礼物数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarryCompensateDressLevelResponse) Reset() {
	*x = MarryCompensateDressLevelResponse{}
	mi := &file_mode_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarryCompensateDressLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarryCompensateDressLevelResponse) ProtoMessage() {}

func (x *MarryCompensateDressLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarryCompensateDressLevelResponse.ProtoReflect.Descriptor instead.
func (*MarryCompensateDressLevelResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{23}
}

func (x *MarryCompensateDressLevelResponse) GetGiftNum() int64 {
	if x != nil {
		return x.GiftNum
	}
	return 0
}

//离婚和取掉订婚共用接口，    1. 增加【挚友】面板，主播点击后可查看目前处于【至臻挚友】状态的用户，点击分开后，需用户双方输入“88”，即可进行离婚操作
type MarryBreakRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelId       int64                  `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`              // 创建模式 1:默认模式
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户id
	UserIdOther   string                 `protobuf:"bytes,3,opt,name=user_id_other,json=userIdOther,proto3" json:"user_id_other,omitempty"` // 用户id
	MarryType     int32                  `protobuf:"varint,4,opt,name=marry_type,json=marryType,proto3" json:"marry_type,omitempty"`        // 0:代表取消订婚；1：代表离婚
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarryBreakRequest) Reset() {
	*x = MarryBreakRequest{}
	mi := &file_mode_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarryBreakRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarryBreakRequest) ProtoMessage() {}

func (x *MarryBreakRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarryBreakRequest.ProtoReflect.Descriptor instead.
func (*MarryBreakRequest) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{24}
}

func (x *MarryBreakRequest) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *MarryBreakRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MarryBreakRequest) GetUserIdOther() string {
	if x != nil {
		return x.UserIdOther
	}
	return ""
}

func (x *MarryBreakRequest) GetMarryType() int32 {
	if x != nil {
		return x.MarryType
	}
	return 0
}

type MarryBreakResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuc         bool                   `protobuf:"varint,1,opt,name=is_suc,json=isSuc,proto3" json:"is_suc,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户id
	UserIdOther   string                 `protobuf:"bytes,3,opt,name=user_id_other,json=userIdOther,proto3" json:"user_id_other,omitempty"` // 用户id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarryBreakResponse) Reset() {
	*x = MarryBreakResponse{}
	mi := &file_mode_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarryBreakResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarryBreakResponse) ProtoMessage() {}

func (x *MarryBreakResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarryBreakResponse.ProtoReflect.Descriptor instead.
func (*MarryBreakResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{25}
}

func (x *MarryBreakResponse) GetIsSuc() bool {
	if x != nil {
		return x.IsSuc
	}
	return false
}

func (x *MarryBreakResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MarryBreakResponse) GetUserIdOther() string {
	if x != nil {
		return x.UserIdOther
	}
	return ""
}

//订婚
type BookingMarryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户id
	UserIdOther   string                 `protobuf:"bytes,2,opt,name=user_id_other,json=userIdOther,proto3" json:"user_id_other,omitempty"` // 用户id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookingMarryResponse) Reset() {
	*x = BookingMarryResponse{}
	mi := &file_mode_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookingMarryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingMarryResponse) ProtoMessage() {}

func (x *BookingMarryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingMarryResponse.ProtoReflect.Descriptor instead.
func (*BookingMarryResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{26}
}

func (x *BookingMarryResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BookingMarryResponse) GetUserIdOther() string {
	if x != nil {
		return x.UserIdOther
	}
	return ""
}

//补特效协议
type NewAddSpecialEffectsItem struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	UidId         string                                         `protobuf:"bytes,1,opt,name=uid_id,json=uidId,proto3" json:"uid_id,omitempty"` //用户id
	List          []*NewAddSpecialEffectsItem_SpecialEffectsItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewAddSpecialEffectsItem) Reset() {
	*x = NewAddSpecialEffectsItem{}
	mi := &file_mode_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewAddSpecialEffectsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAddSpecialEffectsItem) ProtoMessage() {}

func (x *NewAddSpecialEffectsItem) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAddSpecialEffectsItem.ProtoReflect.Descriptor instead.
func (*NewAddSpecialEffectsItem) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{27}
}

func (x *NewAddSpecialEffectsItem) GetUidId() string {
	if x != nil {
		return x.UidId
	}
	return ""
}

func (x *NewAddSpecialEffectsItem) GetList() []*NewAddSpecialEffectsItem_SpecialEffectsItem {
	if x != nil {
		return x.List
	}
	return nil
}

type NewAddSpecialEffectsRequest struct {
	state                 protoimpl.MessageState      `protogen:"open.v1"`
	AddSpecialEffectsItem []*NewAddSpecialEffectsItem `protobuf:"bytes,1,rep,name=add_special_effects_item,json=addSpecialEffectsItem,proto3" json:"add_special_effects_item,omitempty"` //特效列表
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *NewAddSpecialEffectsRequest) Reset() {
	*x = NewAddSpecialEffectsRequest{}
	mi := &file_mode_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewAddSpecialEffectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAddSpecialEffectsRequest) ProtoMessage() {}

func (x *NewAddSpecialEffectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAddSpecialEffectsRequest.ProtoReflect.Descriptor instead.
func (*NewAddSpecialEffectsRequest) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{28}
}

func (x *NewAddSpecialEffectsRequest) GetAddSpecialEffectsItem() []*NewAddSpecialEffectsItem {
	if x != nil {
		return x.AddSpecialEffectsItem
	}
	return nil
}

type NewAddSpecialEffectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewAddSpecialEffectsResponse) Reset() {
	*x = NewAddSpecialEffectsResponse{}
	mi := &file_mode_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewAddSpecialEffectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAddSpecialEffectsResponse) ProtoMessage() {}

func (x *NewAddSpecialEffectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAddSpecialEffectsResponse.ProtoReflect.Descriptor instead.
func (*NewAddSpecialEffectsResponse) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{29}
}

type NewAddSpecialEffectsItem_SpecialEffectsItem struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SpecialEffectsId  int64                  `protobuf:"varint,1,opt,name=special_effects_id,json=specialEffectsId,proto3" json:"special_effects_id,omitempty"`    //特效id
	SpecialEffectsNum int64                  `protobuf:"varint,2,opt,name=special_effects_num,json=specialEffectsNum,proto3" json:"special_effects_num,omitempty"` //特效数量
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NewAddSpecialEffectsItem_SpecialEffectsItem) Reset() {
	*x = NewAddSpecialEffectsItem_SpecialEffectsItem{}
	mi := &file_mode_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewAddSpecialEffectsItem_SpecialEffectsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAddSpecialEffectsItem_SpecialEffectsItem) ProtoMessage() {}

func (x *NewAddSpecialEffectsItem_SpecialEffectsItem) ProtoReflect() protoreflect.Message {
	mi := &file_mode_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAddSpecialEffectsItem_SpecialEffectsItem.ProtoReflect.Descriptor instead.
func (*NewAddSpecialEffectsItem_SpecialEffectsItem) Descriptor() ([]byte, []int) {
	return file_mode_proto_rawDescGZIP(), []int{27, 0}
}

func (x *NewAddSpecialEffectsItem_SpecialEffectsItem) GetSpecialEffectsId() int64 {
	if x != nil {
		return x.SpecialEffectsId
	}
	return 0
}

func (x *NewAddSpecialEffectsItem_SpecialEffectsItem) GetSpecialEffectsNum() int64 {
	if x != nil {
		return x.SpecialEffectsNum
	}
	return 0
}

var File_mode_proto protoreflect.FileDescriptor

var file_mode_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x6e, 0x6b, 0x22, 0x30, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x0f, 0x45,
	0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x22, 0x12, 0x0a, 0x10, 0x45, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6b, 0x0a, 0x29, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x61, 0x6e, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x69, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x69, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x69, 0x64, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x61, 0x6e,
	0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x72, 0x0a, 0x1a, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x72, 0x61,
	0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x42, 0x79, 0x49,
	0x64, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x17, 0x65, 0x6e, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x61, 0x6e, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x63, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x61, 0x6e, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x43, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x70, 0x22, 0x4b, 0x0a, 0x17, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x61, 0x6e, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x69, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x61, 0x6e, 0x6b, 0x4e, 0x75, 0x6d, 0x22, 0x76, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x6e, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x43, 0x70, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x69, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x69, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x69, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x69, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x4e, 0x75, 0x6d, 0x22, 0x5c,
	0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x69, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x69, 0x64, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x18,
	0x41, 0x64, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x18, 0x61, 0x64, 0x64, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x15, 0x61,
	0x64, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73,
	0x49, 0x74, 0x65, 0x6d, 0x22, 0x1b, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xce, 0x02, 0x0a, 0x18, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x5e,
	0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x63,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x52,
	0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x27, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x69, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x69, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x69, 0x64, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6e, 0x5f, 0x63, 0x61,
	0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x6e, 0x43, 0x61, 0x6d, 0x70,
	0x22, 0x4b, 0x0a, 0x1c, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x15, 0x0a, 0x06, 0x75, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x75, 0x69, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xcc, 0x01,
	0x0a, 0x23, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x69, 0x64, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x2e,
	0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x11, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x6f, 0x79, 0x22, 0x1b, 0x0a, 0x19,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x0d, 0x43, 0x70, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x0e, 0x43, 0x70, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x22, 0x11,
	0x0a, 0x0f, 0x43, 0x70, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x9a, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x53, 0x75, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x53,
	0x0a, 0x14, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x21, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x65, 0x6e, 0x73, 0x61, 0x74, 0x65, 0x44, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x69, 0x66, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x47, 0x69, 0x66, 0x74, 0x4e,
	0x75, 0x6d, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x42, 0x72, 0x65, 0x61,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x68, 0x0a, 0x12, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x53, 0x75, 0x63, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x14, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x22, 0xf2,
	0x01, 0x0a, 0x18, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x75,
	0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x69, 0x64,
	0x49, 0x64, 0x12, 0x4b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65,
	0x77, 0x41, 0x64, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a,
	0x72, 0x0a, 0x12, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73,
	0x4e, 0x75, 0x6d, 0x22, 0x7c, 0x0a, 0x1b, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5d, 0x0a, 0x18, 0x61, 0x64, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x15, 0x61, 0x64, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x49, 0x74, 0x65,
	0x6d, 0x22, 0x1e, 0x0a, 0x1c, 0x4e, 0x65, 0x77, 0x41, 0x64, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2a, 0x23, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x12, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x42, 0x1c, 0x5a, 0x1a, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x44,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mode_proto_rawDescOnce sync.Once
	file_mode_proto_rawDescData = file_mode_proto_rawDesc
)

func file_mode_proto_rawDescGZIP() []byte {
	file_mode_proto_rawDescOnce.Do(func() {
		file_mode_proto_rawDescData = protoimpl.X.CompressGZIP(file_mode_proto_rawDescData)
	})
	return file_mode_proto_rawDescData
}

var file_mode_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mode_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_mode_proto_goTypes = []any{
	(ModelType)(0),                                      // 0: game.proto.ModelType
	(*CreateModelRequest)(nil),                          // 1: game.proto.CreateModelRequest
	(*CreateModelResponse)(nil),                         // 2: game.proto.CreateModelResponse
	(*EndModelRequest)(nil),                             // 3: game.proto.EndModelRequest
	(*EndModelResponse)(nil),                            // 4: game.proto.EndModelResponse
	(*RequestRankByIdCombinationRankRequestItem)(nil),   // 5: game.proto.RequestRankByIdCombinationRankRequestItem
	(*RequestRankByIdRequest)(nil),                      // 6: game.proto.RequestRankByIdRequest
	(*RequestRankByIdResponse)(nil),                     // 7: game.proto.RequestRankByIdResponse
	(*RequestRankByIdRankItem)(nil),                     // 8: game.proto.RequestRankByIdRankItem
	(*RequestRankByIdRankCpItem)(nil),                   // 9: game.proto.RequestRankByIdRankCpItem
	(*AddSpecialEffectsItem)(nil),                       // 10: game.proto.AddSpecialEffectsItem
	(*AddSpecialEffectsRequest)(nil),                    // 11: game.proto.AddSpecialEffectsRequest
	(*AddSpecialEffectsResponse)(nil),                   // 12: game.proto.AddSpecialEffectsResponse
	(*AsyncInfinityDataRequest)(nil),                    // 13: game.proto.AsyncInfinityDataRequest
	(*AsyncInfinityDataCombinationRequestItem)(nil),     // 14: game.proto.AsyncInfinityDataCombinationRequestItem
	(*AsyncInfinityDataRequestItem)(nil),                // 15: game.proto.AsyncInfinityDataRequestItem
	(*AsyncInfinityDataRequestCurrentItem)(nil),         // 16: game.proto.AsyncInfinityDataRequestCurrentItem
	(*AsyncInfinityDataResponse)(nil),                   // 17: game.proto.AsyncInfinityDataResponse
	(*CpLinkRequest)(nil),                               // 18: game.proto.CpLinkRequest
	(*CpLinkResponse)(nil),                              // 19: game.proto.CpLinkResponse
	(*CpBreakRequest)(nil),                              // 20: game.proto.CpBreakRequest
	(*CpBreakResponse)(nil),                             // 21: game.proto.CpBreakResponse
	(*MarrySuccessRequest)(nil),                         // 22: game.proto.MarrySuccessRequest
	(*MarrySuccessResponse)(nil),                        // 23: game.proto.MarrySuccessResponse
	(*MarryCompensateDressLevelResponse)(nil),           // 24: game.proto.MarryCompensateDressLevelResponse
	(*MarryBreakRequest)(nil),                           // 25: game.proto.MarryBreakRequest
	(*MarryBreakResponse)(nil),                          // 26: game.proto.MarryBreakResponse
	(*BookingMarryResponse)(nil),                        // 27: game.proto.BookingMarryResponse
	(*NewAddSpecialEffectsItem)(nil),                    // 28: game.proto.NewAddSpecialEffectsItem
	(*NewAddSpecialEffectsRequest)(nil),                 // 29: game.proto.NewAddSpecialEffectsRequest
	(*NewAddSpecialEffectsResponse)(nil),                // 30: game.proto.NewAddSpecialEffectsResponse
	(*NewAddSpecialEffectsItem_SpecialEffectsItem)(nil), // 31: game.proto.NewAddSpecialEffectsItem.SpecialEffectsItem
}
var file_mode_proto_depIdxs = []int32{
	5,  // 0: game.proto.RequestRankByIdRequest.end_model_rank_combination:type_name -> game.proto.RequestRankByIdCombinationRankRequestItem
	8,  // 1: game.proto.RequestRankByIdResponse.list:type_name -> game.proto.RequestRankByIdRankItem
	9,  // 2: game.proto.RequestRankByIdResponse.list_cp:type_name -> game.proto.RequestRankByIdRankCpItem
	10, // 3: game.proto.AddSpecialEffectsRequest.add_special_effects_item:type_name -> game.proto.AddSpecialEffectsItem
	15, // 4: game.proto.AsyncInfinityDataRequest.list:type_name -> game.proto.AsyncInfinityDataRequestItem
	14, // 5: game.proto.AsyncInfinityDataRequest.combination_list:type_name -> game.proto.AsyncInfinityDataCombinationRequestItem
	16, // 6: game.proto.AsyncInfinityDataRequest.current_list:type_name -> game.proto.AsyncInfinityDataRequestCurrentItem
	31, // 7: game.proto.NewAddSpecialEffectsItem.list:type_name -> game.proto.NewAddSpecialEffectsItem.SpecialEffectsItem
	28, // 8: game.proto.NewAddSpecialEffectsRequest.add_special_effects_item:type_name -> game.proto.NewAddSpecialEffectsItem
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_mode_proto_init() }
func file_mode_proto_init() {
	if File_mode_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mode_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mode_proto_goTypes,
		DependencyIndexes: file_mode_proto_depIdxs,
		EnumInfos:         file_mode_proto_enumTypes,
		MessageInfos:      file_mode_proto_msgTypes,
	}.Build()
	File_mode_proto = out.File
	file_mode_proto_rawDesc = nil
	file_mode_proto_goTypes = nil
	file_mode_proto_depIdxs = nil
}
