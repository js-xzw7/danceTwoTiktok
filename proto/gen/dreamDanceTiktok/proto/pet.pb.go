// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: pet.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//获取魅力值排行榜
type PetCharmRankRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetCharmRankRequest) Reset() {
	*x = PetCharmRankRequest{}
	mi := &file_pet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetCharmRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetCharmRankRequest) ProtoMessage() {}

func (x *PetCharmRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetCharmRankRequest.ProtoReflect.Descriptor instead.
func (*PetCharmRankRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{0}
}

type PetCharmRankResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	List          []*PetCharmRankResponseUserInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetCharmRankResponse) Reset() {
	*x = PetCharmRankResponse{}
	mi := &file_pet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetCharmRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetCharmRankResponse) ProtoMessage() {}

func (x *PetCharmRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetCharmRankResponse.ProtoReflect.Descriptor instead.
func (*PetCharmRankResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{1}
}

func (x *PetCharmRankResponse) GetList() []*PetCharmRankResponseUserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

//宠物面板
type PetPanelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // 用户id
	PetId         string                 `protobuf:"bytes,2,opt,name=petId,proto3" json:"petId,omitempty"`   // 宠物id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetPanelRequest) Reset() {
	*x = PetPanelRequest{}
	mi := &file_pet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetPanelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetPanelRequest) ProtoMessage() {}

func (x *PetPanelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetPanelRequest.ProtoReflect.Descriptor instead.
func (*PetPanelRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{2}
}

func (x *PetPanelRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetPanelRequest) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

type PetPanelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PetName       string                 `protobuf:"bytes,1,opt,name=petName,proto3" json:"petName,omitempty"`           // 宠物名
	PetNo         string                 `protobuf:"bytes,2,opt,name=petNo,proto3" json:"petNo,omitempty"`               // 宠物编号
	Mood          int64                  `protobuf:"varint,3,opt,name=mood,proto3" json:"mood,omitempty"`                //心情值
	Iq            int64                  `protobuf:"varint,4,opt,name=iq,proto3" json:"iq,omitempty"`                    //智力值
	Muscle        int64                  `protobuf:"varint,5,opt,name=muscle,proto3" json:"muscle,omitempty"`            //体力值
	Growth        int64                  `protobuf:"varint,6,opt,name=growth,proto3" json:"growth,omitempty"`            //当月成长值
	Charm         int64                  `protobuf:"varint,7,opt,name=charm,proto3" json:"charm,omitempty"`              //魅力值
	Birthday      int64                  `protobuf:"varint,8,opt,name=birthday,proto3" json:"birthday,omitempty"`        //宠物生日
	Status        int64                  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`            //宠物状态 1.学习中 2.打工中
	ToDoEndTime   int64                  `protobuf:"varint,10,opt,name=toDoEndTime,proto3" json:"toDoEndTime,omitempty"` //干活结束时间
	PetId         string                 `protobuf:"bytes,11,opt,name=petId,proto3" json:"petId,omitempty"`              // 宠物id
	TotalGrowth   int64                  `protobuf:"varint,12,opt,name=totalGrowth,proto3" json:"totalGrowth,omitempty"` //总成长值
	GiveNum       int64                  `protobuf:"varint,13,opt,name=giveNum,proto3" json:"giveNum,omitempty"`         //已经赠送次数
	IsUp          bool                   `protobuf:"varint,14,opt,name=isUp,proto3" json:"isUp,omitempty"`               // 是否上下场
	PetElement    string                 `protobuf:"bytes,15,opt,name=petElement,proto3" json:"petElement,omitempty"`    // 宠物穿戴装备
	RenameNum     int64                  `protobuf:"varint,16,opt,name=renameNum,proto3" json:"renameNum,omitempty"`     //已经改名次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetPanelResponse) Reset() {
	*x = PetPanelResponse{}
	mi := &file_pet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetPanelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetPanelResponse) ProtoMessage() {}

func (x *PetPanelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetPanelResponse.ProtoReflect.Descriptor instead.
func (*PetPanelResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{3}
}

func (x *PetPanelResponse) GetPetName() string {
	if x != nil {
		return x.PetName
	}
	return ""
}

func (x *PetPanelResponse) GetPetNo() string {
	if x != nil {
		return x.PetNo
	}
	return ""
}

func (x *PetPanelResponse) GetMood() int64 {
	if x != nil {
		return x.Mood
	}
	return 0
}

func (x *PetPanelResponse) GetIq() int64 {
	if x != nil {
		return x.Iq
	}
	return 0
}

func (x *PetPanelResponse) GetMuscle() int64 {
	if x != nil {
		return x.Muscle
	}
	return 0
}

func (x *PetPanelResponse) GetGrowth() int64 {
	if x != nil {
		return x.Growth
	}
	return 0
}

func (x *PetPanelResponse) GetCharm() int64 {
	if x != nil {
		return x.Charm
	}
	return 0
}

func (x *PetPanelResponse) GetBirthday() int64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *PetPanelResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PetPanelResponse) GetToDoEndTime() int64 {
	if x != nil {
		return x.ToDoEndTime
	}
	return 0
}

func (x *PetPanelResponse) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetPanelResponse) GetTotalGrowth() int64 {
	if x != nil {
		return x.TotalGrowth
	}
	return 0
}

func (x *PetPanelResponse) GetGiveNum() int64 {
	if x != nil {
		return x.GiveNum
	}
	return 0
}

func (x *PetPanelResponse) GetIsUp() bool {
	if x != nil {
		return x.IsUp
	}
	return false
}

func (x *PetPanelResponse) GetPetElement() string {
	if x != nil {
		return x.PetElement
	}
	return ""
}

func (x *PetPanelResponse) GetRenameNum() int64 {
	if x != nil {
		return x.RenameNum
	}
	return 0
}

// 宠物学习，打工
type PetStudyWorkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`  //用户id
	PetId         string                 `protobuf:"bytes,2,opt,name=petId,proto3" json:"petId,omitempty"`    //宠物Id
	TaskId        int64                  `protobuf:"varint,3,opt,name=taskId,proto3" json:"taskId,omitempty"` //任务id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetStudyWorkRequest) Reset() {
	*x = PetStudyWorkRequest{}
	mi := &file_pet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetStudyWorkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetStudyWorkRequest) ProtoMessage() {}

func (x *PetStudyWorkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetStudyWorkRequest.ProtoReflect.Descriptor instead.
func (*PetStudyWorkRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{4}
}

func (x *PetStudyWorkRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetStudyWorkRequest) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetStudyWorkRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type PetStudyWorkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`    //用户id
	PetId         string                 `protobuf:"bytes,2,opt,name=petId,proto3" json:"petId,omitempty"`      //宠物Id
	Status        int64                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`   //状态
	EndTime       int64                  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"` //结束时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetStudyWorkResponse) Reset() {
	*x = PetStudyWorkResponse{}
	mi := &file_pet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetStudyWorkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetStudyWorkResponse) ProtoMessage() {}

func (x *PetStudyWorkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetStudyWorkResponse.ProtoReflect.Descriptor instead.
func (*PetStudyWorkResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{5}
}

func (x *PetStudyWorkResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetStudyWorkResponse) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetStudyWorkResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PetStudyWorkResponse) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

// 宠物改名
type PetRenameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	PetId         string                 `protobuf:"bytes,2,opt,name=petId,proto3" json:"petId,omitempty"`   //宠物id
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`     //名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetRenameRequest) Reset() {
	*x = PetRenameRequest{}
	mi := &file_pet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetRenameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetRenameRequest) ProtoMessage() {}

func (x *PetRenameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetRenameRequest.ProtoReflect.Descriptor instead.
func (*PetRenameRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{6}
}

func (x *PetRenameRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetRenameRequest) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetRenameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PetRenameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	PetId         string                 `protobuf:"bytes,2,opt,name=petId,proto3" json:"petId,omitempty"`   //宠物id
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`     //名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetRenameResponse) Reset() {
	*x = PetRenameResponse{}
	mi := &file_pet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetRenameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetRenameResponse) ProtoMessage() {}

func (x *PetRenameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetRenameResponse.ProtoReflect.Descriptor instead.
func (*PetRenameResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{7}
}

func (x *PetRenameResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetRenameResponse) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetRenameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 成长值奖励
type PetGrowthRewardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetGrowthRewardRequest) Reset() {
	*x = PetGrowthRewardRequest{}
	mi := &file_pet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetGrowthRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetGrowthRewardRequest) ProtoMessage() {}

func (x *PetGrowthRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetGrowthRewardRequest.ProtoReflect.Descriptor instead.
func (*PetGrowthRewardRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{8}
}

type PetGrowthRewardResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	List          []*PetGrowthRewardResponseDancePetGrowth `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetGrowthRewardResponse) Reset() {
	*x = PetGrowthRewardResponse{}
	mi := &file_pet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetGrowthRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetGrowthRewardResponse) ProtoMessage() {}

func (x *PetGrowthRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetGrowthRewardResponse.ProtoReflect.Descriptor instead.
func (*PetGrowthRewardResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{9}
}

func (x *PetGrowthRewardResponse) GetList() []*PetGrowthRewardResponseDancePetGrowth {
	if x != nil {
		return x.List
	}
	return nil
}

// 送礼物加速宠物学习打工
type PetGiftSpeedPushResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`    //用户id
	PetId         string                 `protobuf:"bytes,2,opt,name=petId,proto3" json:"petId,omitempty"`      //宠物id
	Time          int64                  `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`       //加速时间
	EndTime       int64                  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"` //结束时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetGiftSpeedPushResponse) Reset() {
	*x = PetGiftSpeedPushResponse{}
	mi := &file_pet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetGiftSpeedPushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetGiftSpeedPushResponse) ProtoMessage() {}

func (x *PetGiftSpeedPushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetGiftSpeedPushResponse.ProtoReflect.Descriptor instead.
func (*PetGiftSpeedPushResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{10}
}

func (x *PetGiftSpeedPushResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetGiftSpeedPushResponse) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetGiftSpeedPushResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *PetGiftSpeedPushResponse) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type PetCharmAwardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetCharmAwardRequest) Reset() {
	*x = PetCharmAwardRequest{}
	mi := &file_pet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetCharmAwardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetCharmAwardRequest) ProtoMessage() {}

func (x *PetCharmAwardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetCharmAwardRequest.ProtoReflect.Descriptor instead.
func (*PetCharmAwardRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{11}
}

type PetCharmAwardResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	List          []*PetCharmAwardResponseDancePetCharmRank `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetCharmAwardResponse) Reset() {
	*x = PetCharmAwardResponse{}
	mi := &file_pet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetCharmAwardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetCharmAwardResponse) ProtoMessage() {}

func (x *PetCharmAwardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetCharmAwardResponse.ProtoReflect.Descriptor instead.
func (*PetCharmAwardResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{12}
}

func (x *PetCharmAwardResponse) GetList() []*PetCharmAwardResponseDancePetCharmRank {
	if x != nil {
		return x.List
	}
	return nil
}

// 宠物体力排行榜
type PetStaminaRankRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetStaminaRankRequest) Reset() {
	*x = PetStaminaRankRequest{}
	mi := &file_pet_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetStaminaRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetStaminaRankRequest) ProtoMessage() {}

func (x *PetStaminaRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetStaminaRankRequest.ProtoReflect.Descriptor instead.
func (*PetStaminaRankRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{13}
}

type PetStaminaRankResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	List          []*PetStaminaRankResponseUserInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetStaminaRankResponse) Reset() {
	*x = PetStaminaRankResponse{}
	mi := &file_pet_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetStaminaRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetStaminaRankResponse) ProtoMessage() {}

func (x *PetStaminaRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetStaminaRankResponse.ProtoReflect.Descriptor instead.
func (*PetStaminaRankResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{14}
}

func (x *PetStaminaRankResponse) GetList() []*PetStaminaRankResponseUserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 宠物智力排行榜
type PetIQRankRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetIQRankRequest) Reset() {
	*x = PetIQRankRequest{}
	mi := &file_pet_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetIQRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetIQRankRequest) ProtoMessage() {}

func (x *PetIQRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetIQRankRequest.ProtoReflect.Descriptor instead.
func (*PetIQRankRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{15}
}

type PetIQRankResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	List          []*PetIQRankResponseUserInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetIQRankResponse) Reset() {
	*x = PetIQRankResponse{}
	mi := &file_pet_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetIQRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetIQRankResponse) ProtoMessage() {}

func (x *PetIQRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetIQRankResponse.ProtoReflect.Descriptor instead.
func (*PetIQRankResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{16}
}

func (x *PetIQRankResponse) GetList() []*PetIQRankResponseUserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 宠物赠送魅力值
type PetGiveCharmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromPetId     string                 `protobuf:"bytes,1,opt,name=fromPetId,proto3" json:"fromPetId,omitempty"`   //赠送者宠物id
	ToPetId       string                 `protobuf:"bytes,2,opt,name=toPetId,proto3" json:"toPetId,omitempty"`       //接收者宠物id
	Charm         int64                  `protobuf:"varint,3,opt,name=charm,proto3" json:"charm,omitempty"`          //赠送的魅力值
	FromUserId    string                 `protobuf:"bytes,4,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"` //赠送者id
	ToUserId      string                 `protobuf:"bytes,5,opt,name=toUserId,proto3" json:"toUserId,omitempty"`     //接收者id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetGiveCharmRequest) Reset() {
	*x = PetGiveCharmRequest{}
	mi := &file_pet_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetGiveCharmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetGiveCharmRequest) ProtoMessage() {}

func (x *PetGiveCharmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetGiveCharmRequest.ProtoReflect.Descriptor instead.
func (*PetGiveCharmRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{17}
}

func (x *PetGiveCharmRequest) GetFromPetId() string {
	if x != nil {
		return x.FromPetId
	}
	return ""
}

func (x *PetGiveCharmRequest) GetToPetId() string {
	if x != nil {
		return x.ToPetId
	}
	return ""
}

func (x *PetGiveCharmRequest) GetCharm() int64 {
	if x != nil {
		return x.Charm
	}
	return 0
}

func (x *PetGiveCharmRequest) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *PetGiveCharmRequest) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

type PetGiveCharmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromPetId     string                 `protobuf:"bytes,1,opt,name=fromPetId,proto3" json:"fromPetId,omitempty"`   //赠送者宠物id
	ToPetId       string                 `protobuf:"bytes,2,opt,name=toPetId,proto3" json:"toPetId,omitempty"`       //接收者宠物id
	FromUserId    string                 `protobuf:"bytes,3,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"` //赠送者id
	ToUserId      string                 `protobuf:"bytes,4,opt,name=toUserId,proto3" json:"toUserId,omitempty"`     //接收者id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetGiveCharmResponse) Reset() {
	*x = PetGiveCharmResponse{}
	mi := &file_pet_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetGiveCharmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetGiveCharmResponse) ProtoMessage() {}

func (x *PetGiveCharmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetGiveCharmResponse.ProtoReflect.Descriptor instead.
func (*PetGiveCharmResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{18}
}

func (x *PetGiveCharmResponse) GetFromPetId() string {
	if x != nil {
		return x.FromPetId
	}
	return ""
}

func (x *PetGiveCharmResponse) GetToPetId() string {
	if x != nil {
		return x.ToPetId
	}
	return ""
}

func (x *PetGiveCharmResponse) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *PetGiveCharmResponse) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

//保存宠物的装扮
type PetSaveElementRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`     //用户id
	PetId         string                 `protobuf:"bytes,2,opt,name=petId,proto3" json:"petId,omitempty"`       // 宠物id
	Elements      string                 `protobuf:"bytes,3,opt,name=elements,proto3" json:"elements,omitempty"` //装扮
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetSaveElementRequest) Reset() {
	*x = PetSaveElementRequest{}
	mi := &file_pet_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetSaveElementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetSaveElementRequest) ProtoMessage() {}

func (x *PetSaveElementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetSaveElementRequest.ProtoReflect.Descriptor instead.
func (*PetSaveElementRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{19}
}

func (x *PetSaveElementRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetSaveElementRequest) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetSaveElementRequest) GetElements() string {
	if x != nil {
		return x.Elements
	}
	return ""
}

type PetSaveElementResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetSaveElementResponse) Reset() {
	*x = PetSaveElementResponse{}
	mi := &file_pet_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetSaveElementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetSaveElementResponse) ProtoMessage() {}

func (x *PetSaveElementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetSaveElementResponse.ProtoReflect.Descriptor instead.
func (*PetSaveElementResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{20}
}

type PetPlayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	PetId         string                 `protobuf:"bytes,2,opt,name=petId,proto3" json:"petId,omitempty"`   // 宠物id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetPlayRequest) Reset() {
	*x = PetPlayRequest{}
	mi := &file_pet_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetPlayRequest) ProtoMessage() {}

func (x *PetPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetPlayRequest.ProtoReflect.Descriptor instead.
func (*PetPlayRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{21}
}

func (x *PetPlayRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetPlayRequest) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

type PetPlayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetPlayResponse) Reset() {
	*x = PetPlayResponse{}
	mi := &file_pet_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetPlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetPlayResponse) ProtoMessage() {}

func (x *PetPlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetPlayResponse.ProtoReflect.Descriptor instead.
func (*PetPlayResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{22}
}

// 宠物推送
type PetPushResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PetId         string                 `protobuf:"bytes,2,opt,name=petId,proto3" json:"petId,omitempty"`
	PetNo         string                 `protobuf:"bytes,3,opt,name=petNo,proto3" json:"petNo,omitempty"`     //宠物编号
	PetName       string                 `protobuf:"bytes,4,opt,name=petName,proto3" json:"petName,omitempty"` // 宠物名字
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetPushResponse) Reset() {
	*x = PetPushResponse{}
	mi := &file_pet_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetPushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetPushResponse) ProtoMessage() {}

func (x *PetPushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetPushResponse.ProtoReflect.Descriptor instead.
func (*PetPushResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{23}
}

func (x *PetPushResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetPushResponse) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetPushResponse) GetPetNo() string {
	if x != nil {
		return x.PetNo
	}
	return ""
}

func (x *PetPushResponse) GetPetName() string {
	if x != nil {
		return x.PetName
	}
	return ""
}

// 用户宠物体力排行榜
type PetUserStaminaRankRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetUserStaminaRankRequest) Reset() {
	*x = PetUserStaminaRankRequest{}
	mi := &file_pet_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetUserStaminaRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetUserStaminaRankRequest) ProtoMessage() {}

func (x *PetUserStaminaRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetUserStaminaRankRequest.ProtoReflect.Descriptor instead.
func (*PetUserStaminaRankRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{24}
}

func (x *PetUserStaminaRankRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PetUserStaminaRankResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	List          []*PetUserStaminaRankResponseUserInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetUserStaminaRankResponse) Reset() {
	*x = PetUserStaminaRankResponse{}
	mi := &file_pet_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetUserStaminaRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetUserStaminaRankResponse) ProtoMessage() {}

func (x *PetUserStaminaRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetUserStaminaRankResponse.ProtoReflect.Descriptor instead.
func (*PetUserStaminaRankResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{25}
}

func (x *PetUserStaminaRankResponse) GetList() []*PetUserStaminaRankResponseUserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 用户宠物智力排行榜
type PetUserIqRankRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetUserIqRankRequest) Reset() {
	*x = PetUserIqRankRequest{}
	mi := &file_pet_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetUserIqRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetUserIqRankRequest) ProtoMessage() {}

func (x *PetUserIqRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetUserIqRankRequest.ProtoReflect.Descriptor instead.
func (*PetUserIqRankRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{26}
}

func (x *PetUserIqRankRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PetUserIqRankResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	List          []*PetUserIqRankResponseUserInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetUserIqRankResponse) Reset() {
	*x = PetUserIqRankResponse{}
	mi := &file_pet_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetUserIqRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetUserIqRankResponse) ProtoMessage() {}

func (x *PetUserIqRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetUserIqRankResponse.ProtoReflect.Descriptor instead.
func (*PetUserIqRankResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{27}
}

func (x *PetUserIqRankResponse) GetList() []*PetUserIqRankResponseUserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 用户宠物魅力值排行榜
type PetUserCharmRankRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetUserCharmRankRequest) Reset() {
	*x = PetUserCharmRankRequest{}
	mi := &file_pet_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetUserCharmRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetUserCharmRankRequest) ProtoMessage() {}

func (x *PetUserCharmRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetUserCharmRankRequest.ProtoReflect.Descriptor instead.
func (*PetUserCharmRankRequest) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{28}
}

func (x *PetUserCharmRankRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PetUserCharmRankResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	List          []*PetUserCharmRankResponseUserInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetUserCharmRankResponse) Reset() {
	*x = PetUserCharmRankResponse{}
	mi := &file_pet_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetUserCharmRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetUserCharmRankResponse) ProtoMessage() {}

func (x *PetUserCharmRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetUserCharmRankResponse.ProtoReflect.Descriptor instead.
func (*PetUserCharmRankResponse) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{29}
}

func (x *PetUserCharmRankResponse) GetList() []*PetUserCharmRankResponseUserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type PetCharmRankResponseUserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`     //用户id
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`     //头像
	PetId         string                 `protobuf:"bytes,4,opt,name=petId,proto3" json:"petId,omitempty"`       //宠物id
	PetNo         string                 `protobuf:"bytes,5,opt,name=petNo,proto3" json:"petNo,omitempty"`       //宠物编号
	Charm         int64                  `protobuf:"varint,6,opt,name=charm,proto3" json:"charm,omitempty"`      //魅力值
	PetName       string                 `protobuf:"bytes,7,opt,name=petName,proto3" json:"petName,omitempty"`   //宠物名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetCharmRankResponseUserInfo) Reset() {
	*x = PetCharmRankResponseUserInfo{}
	mi := &file_pet_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetCharmRankResponseUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetCharmRankResponseUserInfo) ProtoMessage() {}

func (x *PetCharmRankResponseUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetCharmRankResponseUserInfo.ProtoReflect.Descriptor instead.
func (*PetCharmRankResponseUserInfo) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{1, 0}
}

func (x *PetCharmRankResponseUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetCharmRankResponseUserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PetCharmRankResponseUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PetCharmRankResponseUserInfo) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetCharmRankResponseUserInfo) GetPetNo() string {
	if x != nil {
		return x.PetNo
	}
	return ""
}

func (x *PetCharmRankResponseUserInfo) GetCharm() int64 {
	if x != nil {
		return x.Charm
	}
	return 0
}

func (x *PetCharmRankResponseUserInfo) GetPetName() string {
	if x != nil {
		return x.PetName
	}
	return ""
}

type PetGrowthRewardResponseDancePetGrowth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GrowthValue   int64                  `protobuf:"varint,1,opt,name=growthValue,proto3" json:"growthValue,omitempty"`
	Rewards       string                 `protobuf:"bytes,2,opt,name=rewards,proto3" json:"rewards,omitempty"`
	EffectiveDays int64                  `protobuf:"varint,3,opt,name=effectiveDays,proto3" json:"effectiveDays,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetGrowthRewardResponseDancePetGrowth) Reset() {
	*x = PetGrowthRewardResponseDancePetGrowth{}
	mi := &file_pet_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetGrowthRewardResponseDancePetGrowth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetGrowthRewardResponseDancePetGrowth) ProtoMessage() {}

func (x *PetGrowthRewardResponseDancePetGrowth) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetGrowthRewardResponseDancePetGrowth.ProtoReflect.Descriptor instead.
func (*PetGrowthRewardResponseDancePetGrowth) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{9, 0}
}

func (x *PetGrowthRewardResponseDancePetGrowth) GetGrowthValue() int64 {
	if x != nil {
		return x.GrowthValue
	}
	return 0
}

func (x *PetGrowthRewardResponseDancePetGrowth) GetRewards() string {
	if x != nil {
		return x.Rewards
	}
	return ""
}

func (x *PetGrowthRewardResponseDancePetGrowth) GetEffectiveDays() int64 {
	if x != nil {
		return x.EffectiveDays
	}
	return 0
}

type PetCharmAwardResponseDancePetCharmRank struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinLimit      int64                  `protobuf:"varint,2,opt,name=minLimit,proto3" json:"minLimit,omitempty"`           // 最小开始区间
	MaxLimit      int64                  `protobuf:"varint,3,opt,name=maxLimit,proto3" json:"maxLimit,omitempty"`           // 最大开始区间
	Rewards       string                 `protobuf:"bytes,6,opt,name=rewards,proto3" json:"rewards,omitempty"`              //发放道具nos
	EffectiveDays int64                  `protobuf:"varint,7,opt,name=effectiveDays,proto3" json:"effectiveDays,omitempty"` // 有效天数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetCharmAwardResponseDancePetCharmRank) Reset() {
	*x = PetCharmAwardResponseDancePetCharmRank{}
	mi := &file_pet_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetCharmAwardResponseDancePetCharmRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetCharmAwardResponseDancePetCharmRank) ProtoMessage() {}

func (x *PetCharmAwardResponseDancePetCharmRank) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetCharmAwardResponseDancePetCharmRank.ProtoReflect.Descriptor instead.
func (*PetCharmAwardResponseDancePetCharmRank) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{12, 0}
}

func (x *PetCharmAwardResponseDancePetCharmRank) GetMinLimit() int64 {
	if x != nil {
		return x.MinLimit
	}
	return 0
}

func (x *PetCharmAwardResponseDancePetCharmRank) GetMaxLimit() int64 {
	if x != nil {
		return x.MaxLimit
	}
	return 0
}

func (x *PetCharmAwardResponseDancePetCharmRank) GetRewards() string {
	if x != nil {
		return x.Rewards
	}
	return ""
}

func (x *PetCharmAwardResponseDancePetCharmRank) GetEffectiveDays() int64 {
	if x != nil {
		return x.EffectiveDays
	}
	return 0
}

type PetStaminaRankResponseUserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`     //用户id
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`     //头像
	PetId         string                 `protobuf:"bytes,4,opt,name=petId,proto3" json:"petId,omitempty"`       //宠物id
	PetNo         string                 `protobuf:"bytes,5,opt,name=petNo,proto3" json:"petNo,omitempty"`       //宠物编号
	Stamina       int64                  `protobuf:"varint,6,opt,name=stamina,proto3" json:"stamina,omitempty"`  //体力值
	PetName       string                 `protobuf:"bytes,7,opt,name=petName,proto3" json:"petName,omitempty"`   //宠物名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetStaminaRankResponseUserInfo) Reset() {
	*x = PetStaminaRankResponseUserInfo{}
	mi := &file_pet_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetStaminaRankResponseUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetStaminaRankResponseUserInfo) ProtoMessage() {}

func (x *PetStaminaRankResponseUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetStaminaRankResponseUserInfo.ProtoReflect.Descriptor instead.
func (*PetStaminaRankResponseUserInfo) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{14, 0}
}

func (x *PetStaminaRankResponseUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetStaminaRankResponseUserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PetStaminaRankResponseUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PetStaminaRankResponseUserInfo) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetStaminaRankResponseUserInfo) GetPetNo() string {
	if x != nil {
		return x.PetNo
	}
	return ""
}

func (x *PetStaminaRankResponseUserInfo) GetStamina() int64 {
	if x != nil {
		return x.Stamina
	}
	return 0
}

func (x *PetStaminaRankResponseUserInfo) GetPetName() string {
	if x != nil {
		return x.PetName
	}
	return ""
}

type PetIQRankResponseUserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`     //用户id
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`     //头像
	PetId         string                 `protobuf:"bytes,4,opt,name=petId,proto3" json:"petId,omitempty"`       //宠物id
	PetNo         string                 `protobuf:"bytes,5,opt,name=petNo,proto3" json:"petNo,omitempty"`       //宠物编号
	Iq            int64                  `protobuf:"varint,6,opt,name=iq,proto3" json:"iq,omitempty"`            //iq值
	PetName       string                 `protobuf:"bytes,7,opt,name=petName,proto3" json:"petName,omitempty"`   //宠物名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetIQRankResponseUserInfo) Reset() {
	*x = PetIQRankResponseUserInfo{}
	mi := &file_pet_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetIQRankResponseUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetIQRankResponseUserInfo) ProtoMessage() {}

func (x *PetIQRankResponseUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetIQRankResponseUserInfo.ProtoReflect.Descriptor instead.
func (*PetIQRankResponseUserInfo) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{16, 0}
}

func (x *PetIQRankResponseUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetIQRankResponseUserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PetIQRankResponseUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PetIQRankResponseUserInfo) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetIQRankResponseUserInfo) GetPetNo() string {
	if x != nil {
		return x.PetNo
	}
	return ""
}

func (x *PetIQRankResponseUserInfo) GetIq() int64 {
	if x != nil {
		return x.Iq
	}
	return 0
}

func (x *PetIQRankResponseUserInfo) GetPetName() string {
	if x != nil {
		return x.PetName
	}
	return ""
}

type PetUserStaminaRankResponseUserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`     //用户id
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`     //头像
	PetId         string                 `protobuf:"bytes,4,opt,name=petId,proto3" json:"petId,omitempty"`       //宠物id
	PetNo         string                 `protobuf:"bytes,5,opt,name=petNo,proto3" json:"petNo,omitempty"`       //宠物编号
	Stamina       int64                  `protobuf:"varint,6,opt,name=stamina,proto3" json:"stamina,omitempty"`  //体力值
	Rank          int64                  `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"`        // 排名
	PetName       string                 `protobuf:"bytes,8,opt,name=petName,proto3" json:"petName,omitempty"`   //宠物名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetUserStaminaRankResponseUserInfo) Reset() {
	*x = PetUserStaminaRankResponseUserInfo{}
	mi := &file_pet_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetUserStaminaRankResponseUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetUserStaminaRankResponseUserInfo) ProtoMessage() {}

func (x *PetUserStaminaRankResponseUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetUserStaminaRankResponseUserInfo.ProtoReflect.Descriptor instead.
func (*PetUserStaminaRankResponseUserInfo) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{25, 0}
}

func (x *PetUserStaminaRankResponseUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetUserStaminaRankResponseUserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PetUserStaminaRankResponseUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PetUserStaminaRankResponseUserInfo) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetUserStaminaRankResponseUserInfo) GetPetNo() string {
	if x != nil {
		return x.PetNo
	}
	return ""
}

func (x *PetUserStaminaRankResponseUserInfo) GetStamina() int64 {
	if x != nil {
		return x.Stamina
	}
	return 0
}

func (x *PetUserStaminaRankResponseUserInfo) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *PetUserStaminaRankResponseUserInfo) GetPetName() string {
	if x != nil {
		return x.PetName
	}
	return ""
}

type PetUserIqRankResponseUserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`     //用户id
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`     //头像
	PetId         string                 `protobuf:"bytes,4,opt,name=petId,proto3" json:"petId,omitempty"`       //宠物id
	PetNo         string                 `protobuf:"bytes,5,opt,name=petNo,proto3" json:"petNo,omitempty"`       //宠物编号
	Iq            int64                  `protobuf:"varint,6,opt,name=iq,proto3" json:"iq,omitempty"`            //智力值
	Rank          int64                  `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"`        // 排名
	PetName       string                 `protobuf:"bytes,8,opt,name=petName,proto3" json:"petName,omitempty"`   //宠物名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetUserIqRankResponseUserInfo) Reset() {
	*x = PetUserIqRankResponseUserInfo{}
	mi := &file_pet_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetUserIqRankResponseUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetUserIqRankResponseUserInfo) ProtoMessage() {}

func (x *PetUserIqRankResponseUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetUserIqRankResponseUserInfo.ProtoReflect.Descriptor instead.
func (*PetUserIqRankResponseUserInfo) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{27, 0}
}

func (x *PetUserIqRankResponseUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetUserIqRankResponseUserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PetUserIqRankResponseUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PetUserIqRankResponseUserInfo) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetUserIqRankResponseUserInfo) GetPetNo() string {
	if x != nil {
		return x.PetNo
	}
	return ""
}

func (x *PetUserIqRankResponseUserInfo) GetIq() int64 {
	if x != nil {
		return x.Iq
	}
	return 0
}

func (x *PetUserIqRankResponseUserInfo) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *PetUserIqRankResponseUserInfo) GetPetName() string {
	if x != nil {
		return x.PetName
	}
	return ""
}

type PetUserCharmRankResponseUserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`     //用户id
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`     //头像
	PetId         string                 `protobuf:"bytes,4,opt,name=petId,proto3" json:"petId,omitempty"`       //宠物id
	PetNo         string                 `protobuf:"bytes,5,opt,name=petNo,proto3" json:"petNo,omitempty"`       //宠物编号
	Charm         int64                  `protobuf:"varint,6,opt,name=charm,proto3" json:"charm,omitempty"`      //魅力值
	Rank          int64                  `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"`        // 排名
	PetName       string                 `protobuf:"bytes,8,opt,name=petName,proto3" json:"petName,omitempty"`   //宠物名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetUserCharmRankResponseUserInfo) Reset() {
	*x = PetUserCharmRankResponseUserInfo{}
	mi := &file_pet_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetUserCharmRankResponseUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetUserCharmRankResponseUserInfo) ProtoMessage() {}

func (x *PetUserCharmRankResponseUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pet_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetUserCharmRankResponseUserInfo.ProtoReflect.Descriptor instead.
func (*PetUserCharmRankResponseUserInfo) Descriptor() ([]byte, []int) {
	return file_pet_proto_rawDescGZIP(), []int{29, 0}
}

func (x *PetUserCharmRankResponseUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PetUserCharmRankResponseUserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PetUserCharmRankResponseUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PetUserCharmRankResponseUserInfo) GetPetId() string {
	if x != nil {
		return x.PetId
	}
	return ""
}

func (x *PetUserCharmRankResponseUserInfo) GetPetNo() string {
	if x != nil {
		return x.PetNo
	}
	return ""
}

func (x *PetUserCharmRankResponseUserInfo) GetCharm() int64 {
	if x != nil {
		return x.Charm
	}
	return 0
}

func (x *PetUserCharmRankResponseUserInfo) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *PetUserCharmRankResponseUserInfo) GetPetName() string {
	if x != nil {
		return x.PetName
	}
	return ""
}

var File_pet_proto protoreflect.FileDescriptor

var file_pet_proto_rawDesc = []byte{
	0x0a, 0x09, 0x70, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x70, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8a,
	0x02, 0x0a, 0x14, 0x70, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x70, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xb2, 0x01, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x68, 0x61, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x0f, 0x70,
	0x65, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x22, 0xa6, 0x03, 0x0a,
	0x10, 0x70, 0x65, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x65, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x4e,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x6d, 0x6f, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x75, 0x73, 0x63, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x75, 0x73, 0x63, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x44, 0x6f, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x44, 0x6f, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x69, 0x76,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x69, 0x76, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x55, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x69, 0x73, 0x55, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x74, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x74,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x5b, 0x0a, 0x13, 0x70, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x22, 0x76, 0x0a, 0x14, 0x70, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x57, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x10, 0x70, 0x65,
	0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x55, 0x0a, 0x11, 0x70, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x70, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0xd5, 0x01, 0x0a, 0x17, 0x70, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x72, 0x0a, 0x0e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74,
	0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x44, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x22, 0x76, 0x0a, 0x18, 0x70, 0x65, 0x74,
	0x47, 0x69, 0x66, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x16, 0x0a, 0x14, 0x70, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x41, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xee, 0x01, 0x0a, 0x15, 0x70, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x8b, 0x01, 0x0a,
	0x11, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x61, 0x78, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x44, 0x61, 0x79, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x70, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x92, 0x02, 0x0a, 0x16, 0x70, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x69,
	0x6e, 0x61, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x6d, 0x69, 0x6e, 0x61, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a,
	0xb6, 0x01, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x65, 0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x70, 0x65, 0x74, 0x49,
	0x51, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xfe, 0x01, 0x0a,
	0x11, 0x70, 0x65, 0x74, 0x49, 0x51, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x65,
	0x74, 0x49, 0x51, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xac,
	0x01, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65,
	0x74, 0x4e, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9f, 0x01,
	0x0a, 0x13, 0x70, 0x65, 0x74, 0x47, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x50, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x50, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x68,
	0x61, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x8a, 0x01, 0x0a, 0x14, 0x70, 0x65, 0x74, 0x47, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x50, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x50, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x50, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x50, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x15,
	0x70, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x18, 0x0a, 0x16, 0x70, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x70, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x70, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x0a, 0x0f,
	0x70, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65,
	0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a,
	0x19, 0x70, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x52,
	0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xae, 0x02, 0x0a, 0x1a, 0x70, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x6d, 0x69, 0x6e, 0x61, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xca, 0x01, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x70, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x71,
	0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x9a, 0x02, 0x0a, 0x15, 0x70, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x71, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x71, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xc0, 0x01,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74,
	0x4e, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x31, 0x0a, 0x17, 0x70, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x6d,
	0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xa6, 0x02, 0x0a, 0x18, 0x70, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x72, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x1a, 0xc6, 0x01, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x1c, 0x5a, 0x1a,
	0x64, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6b, 0x74, 0x6f, 0x6b,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pet_proto_rawDescOnce sync.Once
	file_pet_proto_rawDescData = file_pet_proto_rawDesc
)

func file_pet_proto_rawDescGZIP() []byte {
	file_pet_proto_rawDescOnce.Do(func() {
		file_pet_proto_rawDescData = protoimpl.X.CompressGZIP(file_pet_proto_rawDescData)
	})
	return file_pet_proto_rawDescData
}

var file_pet_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_pet_proto_goTypes = []any{
	(*PetCharmRankRequest)(nil),                    // 0: game.proto.petCharmRankRequest
	(*PetCharmRankResponse)(nil),                   // 1: game.proto.petCharmRankResponse
	(*PetPanelRequest)(nil),                        // 2: game.proto.petPanelRequest
	(*PetPanelResponse)(nil),                       // 3: game.proto.petPanelResponse
	(*PetStudyWorkRequest)(nil),                    // 4: game.proto.petStudyWorkRequest
	(*PetStudyWorkResponse)(nil),                   // 5: game.proto.petStudyWorkResponse
	(*PetRenameRequest)(nil),                       // 6: game.proto.petRenameRequest
	(*PetRenameResponse)(nil),                      // 7: game.proto.petRenameResponse
	(*PetGrowthRewardRequest)(nil),                 // 8: game.proto.petGrowthRewardRequest
	(*PetGrowthRewardResponse)(nil),                // 9: game.proto.petGrowthRewardResponse
	(*PetGiftSpeedPushResponse)(nil),               // 10: game.proto.petGiftSpeedPushResponse
	(*PetCharmAwardRequest)(nil),                   // 11: game.proto.petCharmAwardRequest
	(*PetCharmAwardResponse)(nil),                  // 12: game.proto.petCharmAwardResponse
	(*PetStaminaRankRequest)(nil),                  // 13: game.proto.petStaminaRankRequest
	(*PetStaminaRankResponse)(nil),                 // 14: game.proto.petStaminaRankResponse
	(*PetIQRankRequest)(nil),                       // 15: game.proto.petIQRankRequest
	(*PetIQRankResponse)(nil),                      // 16: game.proto.petIQRankResponse
	(*PetGiveCharmRequest)(nil),                    // 17: game.proto.petGiveCharmRequest
	(*PetGiveCharmResponse)(nil),                   // 18: game.proto.petGiveCharmResponse
	(*PetSaveElementRequest)(nil),                  // 19: game.proto.petSaveElementRequest
	(*PetSaveElementResponse)(nil),                 // 20: game.proto.petSaveElementResponse
	(*PetPlayRequest)(nil),                         // 21: game.proto.petPlayRequest
	(*PetPlayResponse)(nil),                        // 22: game.proto.petPlayResponse
	(*PetPushResponse)(nil),                        // 23: game.proto.petPushResponse
	(*PetUserStaminaRankRequest)(nil),              // 24: game.proto.petUserStaminaRankRequest
	(*PetUserStaminaRankResponse)(nil),             // 25: game.proto.petUserStaminaRankResponse
	(*PetUserIqRankRequest)(nil),                   // 26: game.proto.petUserIqRankRequest
	(*PetUserIqRankResponse)(nil),                  // 27: game.proto.petUserIqRankResponse
	(*PetUserCharmRankRequest)(nil),                // 28: game.proto.petUserCharmRankRequest
	(*PetUserCharmRankResponse)(nil),               // 29: game.proto.petUserCharmRankResponse
	(*PetCharmRankResponseUserInfo)(nil),           // 30: game.proto.petCharmRankResponse.userInfo
	(*PetGrowthRewardResponseDancePetGrowth)(nil),  // 31: game.proto.petGrowthRewardResponse.dancePetGrowth
	(*PetCharmAwardResponseDancePetCharmRank)(nil), // 32: game.proto.petCharmAwardResponse.dancePetCharmRank
	(*PetStaminaRankResponseUserInfo)(nil),         // 33: game.proto.petStaminaRankResponse.userInfo
	(*PetIQRankResponseUserInfo)(nil),              // 34: game.proto.petIQRankResponse.userInfo
	(*PetUserStaminaRankResponseUserInfo)(nil),     // 35: game.proto.petUserStaminaRankResponse.userInfo
	(*PetUserIqRankResponseUserInfo)(nil),          // 36: game.proto.petUserIqRankResponse.userInfo
	(*PetUserCharmRankResponseUserInfo)(nil),       // 37: game.proto.petUserCharmRankResponse.userInfo
}
var file_pet_proto_depIdxs = []int32{
	30, // 0: game.proto.petCharmRankResponse.list:type_name -> game.proto.petCharmRankResponse.userInfo
	31, // 1: game.proto.petGrowthRewardResponse.list:type_name -> game.proto.petGrowthRewardResponse.dancePetGrowth
	32, // 2: game.proto.petCharmAwardResponse.list:type_name -> game.proto.petCharmAwardResponse.dancePetCharmRank
	33, // 3: game.proto.petStaminaRankResponse.list:type_name -> game.proto.petStaminaRankResponse.userInfo
	34, // 4: game.proto.petIQRankResponse.list:type_name -> game.proto.petIQRankResponse.userInfo
	35, // 5: game.proto.petUserStaminaRankResponse.list:type_name -> game.proto.petUserStaminaRankResponse.userInfo
	36, // 6: game.proto.petUserIqRankResponse.list:type_name -> game.proto.petUserIqRankResponse.userInfo
	37, // 7: game.proto.petUserCharmRankResponse.list:type_name -> game.proto.petUserCharmRankResponse.userInfo
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_pet_proto_init() }
func file_pet_proto_init() {
	if File_pet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pet_proto_goTypes,
		DependencyIndexes: file_pet_proto_depIdxs,
		MessageInfos:      file_pet_proto_msgTypes,
	}.Build()
	File_pet_proto = out.File
	file_pet_proto_rawDesc = nil
	file_pet_proto_goTypes = nil
	file_pet_proto_depIdxs = nil
}
